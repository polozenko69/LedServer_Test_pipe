#!/bin/bash

TITLE_MENU="Центр Управления Светодиодом"
SERVER_PIPE_IN=/tmp/LedServer_in
SERVER_PIPE_OUT=/tmp/LedServer_out

A_COLOR_LED=("red" "green" "yellow" "blue" )
A_RATE_LED=("0" "1" "2" "3" "4" "5" "6")
A_STATE_LED=("off" "on")

STATUS_FAILED="FAILED"
STATUS_OK="OK"

ledColor="" #${A_COLOR_LED[0]}
ledState="" #${A_STATE_LED[0]}
ledRate=""  #${A_RATE_LED[0]}

statusString=""
keypress=0
ansverServer1=""
ansverServer2=""

# функция проверки сервера
function Testserver 
{
    if [ -p $SERVER_PIPE_IN ]
    then
	statusString=""
	return 0
    else
	statusString="сервер не запущен"
	ledState=$STATUS_FAILED
	ledColor=$STATUS_FAILED
	ledRate=$STATUS_FAILED
    return 1
fi
}


function ExchangeServer
{
    ansverServer1=""
    ansverServer2=""
    if [ $# -eq 0 ] || [ $# -gt 2 ]
    then
	statusString="Ошибка"
      	return 1
    elif [ $# -eq 1 ]
    then
	echo "$1" > $SERVER_PIPE_IN
    else
	echo "$1 $2" > $SERVER_PIPE_IN
    fi
    
    read ansverServer1 ansverServer2 < $SERVER_PIPE_OUT
    return 0
}

# -----------------------------

function ComGetLedState
{
    ExchangeServer "get-led-state"
    if [[ $? -eq 0 ]]
    then
	statusString=$ansverServer1
	ledState=$ansverServer2
    fi
}

function ComSetLedState
{
    if [ $# -eq 0 ] || [ $# -gt 1 ]
    then
	statusString="Ошибка"
      	return 1
    else
      ExchangeServer "set-led-state" $1
    fi
    
    if [[ $? -eq 0 ]]
    then
	statusString=$ansverServer1
	if [[ $statusString = $STATUS_OK ]]
	then
	    ledState=$1
	fi
    fi
}

# --------------------------------------
function ComGetLedColor
{
    ExchangeServer "get-led-color"
    if [[ $? -eq 0 ]]
    then
	statusString=$ansverServer1
	ledColor=$ansverServer2
    fi
}

function ComSetLedColor
{
    if [ $# -eq 0 ] || [ $# -gt 1 ]
    then
	statusString="Ошибка"
      	return 1
    else
      ExchangeServer "set-led-color" $1
    fi
    
    if [[ $? -eq 0 ]]
    then
	statusString=$ansverServer1
	if [[ $statusString = $STATUS_OK ]]
	then
	    ledColor=$1
	fi
    fi
}

#----------------------------------------

function ComGetLedRate
{
    ExchangeServer "get-led-rate"
    if [[ $? -eq 0 ]]
    then
	statusString=$ansverServer1
	ledRate=$ansverServer2
    fi
}

function ComSetLedRate
{
    if [ $# -eq 0 ] || [ $# -gt 1 ]
    then
	statusString="Ошибка"
      	return 1
    else
      ExchangeServer "set-led-rate" $1
    fi
    
    if [[ $? -eq 0 ]]
    then
	statusString=$ansverServer1
	if [[ $statusString = $STATUS_OK ]]
	then
	    ledRate=$1
	fi
    fi
}

# -----------------------------------
function UpdateData
{
    ComGetLedState
    ComGetLedColor
    ComGetLedRate
    
}


function LedOnOff
{
    #ComGetLedState
    if [[ $ledState = ${A_STATE_LED[0]} ]]
    then
	ComSetLedState "on"
    else
	ComSetLedState "off"
    fi
      
}


function LedColor
{
    ComGetLedColor
    
    local i=1
    local color=$ledColor
    local varstr=""
    
    clear
    echo "$TITLE_MENU"
    echo 
    echo "Задайте Цвет (текущий - $color):"
    echo 

    for var in ${A_COLOR_LED[*]}
    do
      echo "$i. $var"
      i=$(($i+1))
    done
    echo "$i. Отмена"
    echo
    echo
    
    while :
    do
      read -s -n1 -p "цвет: $varstr" keypress
      if [[ $keypress -gt 0 ]] && [[ $keypress -le ${#A_COLOR_LED[*]} ]]
      then
	color=${A_COLOR_LED[$(($keypress-1))]}
	ComSetLedColor $color
	break
      elif [[ $keypress -eq $i ]]
      then
	break
      else
	echo "неверно"
      fi
    done
    
}


function LedRate
{
    ComGetLedRate
    
    local i=0
    local rate=$ledRate
    local varstr=""
    
    clear
    echo "$TITLE_MENU"
    echo 
    echo "Задайте Частоту мерцания (текущая - $rate):"
    echo 

    for i in ${A_RATE_LED[*]}
    do
      echo "$i Гц"
      #i=$(($i+1))
    done
    echo "$(($i+1)) Отмена"
    echo
    echo
    
    while :
    do
      read -s -n1 -p "частота: $varstr" keypress
      if [[ $keypress -ge 0 ]] && [[ $keypress -le ${#A_RATE_LED[*]} ]]
      then
	rate=${A_RATE_LED[$(($keypress))]}
	ComSetLedRate $rate
	break
      elif [[ $keypress -eq $i ]]
      then
	break
      else
	echo "неверно"
      fi
    done
    
}



#************************#
# Menu                   #
# Функция основного меню #
#************************#
function Menu 
{
    clear
    echo "$TITLE_MENU"
    echo 
    echo "Информация о Светодиоде:"
    echo -e "Состояние\tЦвет\tЧастота"
    echo -e "$ledState\t\t$ledColor\t$ledRate"
    echo 
    echo "1. Обновить информацию."
    echo "2. Включить / Выключить."
    echo "3. Задать Цвет."
    echo "4. Задать Частоту."
    echo "5. Выход."
    echo 
    echo "Результат последней команды: $statusString"
    echo 
    read -p "введите команду: " keypress
    
    statusString="$keypress"

    Testserver 
    if [[ $? -ne 0 ]] && [[ keypress -ne 5 ]]
    then
	return
    fi

    
    case "$keypress" in
    1)
	UpdateData
	;;
    2) 	
	LedOnOff 
	;;
    3)
	LedColor
	;;
    4)
	LedRate
	;;
    5)  
	echo "Работа завершена."
	break 
	;;
    *) 
	statusString="неверная команда"
	;;
    esac
}


#*************************#
# основной цикл программы #
#*************************#

# проверим наличие сервера
Testserver
if [[ $? -eq 0 ]]
then
# обновим данные
    UpdateData
fi

while :
do
    Menu
done

exit 0